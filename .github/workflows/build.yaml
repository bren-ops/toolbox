name: build-matrix

on:
  push:
    branches: [ "main" ]
    tags: [ "v*", "V*" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    name: Build & Push (${{ matrix.target }} @ ${{ matrix.platforms }})
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        target: [fedora, fedora-bootc]
        platforms: [linux/amd64]        
        # add linux/arm64 for multi-arch if desired

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU (needed if building arm64 on amd64)
        uses: docker/setup-qemu-action@v3
        if: contains(matrix.platforms, 'arm64')
        with:
          platforms: ${{ matrix.platforms }}

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GH_CR_TOKEN }}

      - name: Compute tags
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ matrix.target }}
            type=raw,value=sha-${{ github.sha }}-${{ matrix.target }}
            type=ref,event=tag
            type=raw,value=latest,enable=${{ and(github.ref == 'refs/heads/main', matrix.target == 'toolbox') }}

      - name: Build & (conditionally) push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Containerfile
          target: ${{ matrix.target }}
          platforms: ${{ matrix.platforms }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # Optional: lint the Containerfile
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Containerfile
